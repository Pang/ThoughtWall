@use '~@angular/material' as mat;

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$new-pallette: (
 50: #e8eaf6,
 100: #c5cae9,
 200: #9fa8da,
 300: #7986cb,
 400: #7986cb,
 500: #7986cb, 
 600: #7986cb, 
 700: #7986cb, 
 800: #7986cb, 
 900: #7986cb, 
 
 contrast: (
   50: rgba(black, 0.87),
   100: rgba(black, 0.87),
   200: rgba(black, 0.87),
   300: white,
   400: white,
   500: white, 
   600: white, 
   700: white, 
   800: white, 
   900: white, 
 )
);

$ThoughtWall-SPA-primary: mat.define-palette(mat.$indigo-palette);
$ThoughtWall-SPA-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ThoughtWall-SPA-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$ThoughtWall-SPA-theme: mat.define-light-theme($ThoughtWall-SPA-primary, $ThoughtWall-SPA-accent, $ThoughtWall-SPA-warn);

$dark-primary: mat.define-palette(mat.$grey-palette, 900);
$dark-accent:  mat.define-palette(mat.$cyan-palette, 500);
$dark-warn:    mat.define-palette(mat.$deep-orange-palette, 700);
$dark-theme:   mat.define-dark-theme($dark-primary, $dark-accent, $dark-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($dark-theme);

